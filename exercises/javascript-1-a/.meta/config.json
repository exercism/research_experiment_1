{
  "solution_files": [
    "javascript-1-a.js"
  ],
  "test_file": "javascript-1-a.spec.js",
  "tests": [
    {
      "test": "magic-moves > arrange > arrange([ ♠, ♣, ♥, ♦, ✨ ], 3, 0): it moves the ♦ (index 3) to the front (index 0)",
      "name": "it moves the ♦ (index 3) to the front (index 0)",
      "cmd": "arrange([\"♠\", \"♣\", \"♥\", \"♦\", \"✨\"], 3, 0)",
      "expected": ["♦", "♠", "♣", "♥", "✨"]
    },
    {
      "test": "magic-moves > arrange > arrange([ ♠, ♣, ♥, ♦, ✨ ], 3, 0): it does not mutate the input",
      "name": "it does not mutate the input",
      "cmd": "arrange([\"♠\", \"♣\", \"♥\", \"♦\", \"✨\"], 3, 0)",
      "expected": ["♠", "♣", "♥", "♦", "✨"]
    },
    {
      "test": "magic-moves > arrange > arrange([ ♠, ♣, ♥, ♦, ✨ ], -1, 0): moves the ✨ (size - 1) to the front (index 0)",
      "name": "moves the ✨ (size - 1) to the front (index 0)",
      "cmd": "arrange([\"♠\", \"♣\", \"♥\", \"♦\", \"✨\"], -1, 0)",
      "expected": ["✨", "♠", "♣", "♥", "♦"]
    },
    {
      "test": "magic-moves > arrange > arrange([ ♠, ♣, ♥, ♦, ✨ ], 1, -2): moves the ♣ (index 1) just before the back (size - 2)",
      "name": "moves the ♣ (index 1) just before the back (size - 2)",
      "cmd": "arrange([\"♠\", \"♣\", \"♥\", \"♦\", \"✨\"], 1, -2)",
      "expected": ["♠", "♥", "♦", "♣", "✨"]
    },
    {
      "test": "magic-moves > arrange > arrange([ ♠, ♣, ♥, ♦, ✨ ], -3, -4): moves the ♥ (size - 3) one to the left (size - 4)",
      "name": "moves the ♥ (size - 3) one to the left (size - 4)",
      "cmd": "arrange([\"♠\", \"♣\", \"♥\", \"♦\", \"✨\"], -3, -4)",
      "expected": ["♠", "♥", "♣", "♦", "✨"]
    },
    {
      "test": "magic-moves > arrange > arrange([ ♠, ♣, ♥, ♦, ✨ ], 0, 0): keeps ♠ (index 0) in place",
      "name": "keeps ♠ (index 0) in place",
      "cmd": "arrange([\"♠\", \"♣\", \"♥\", \"♦\", \"✨\"], 0, 0)",
      "expected": ["♠", "♣", "♥", "♦", "✨"]
    },
    {
      "test": "magic-moves > rearrange > rearrange([ ♠, ♣, ♥, ♦, ✨ ], 3, 0): it moves the ♦ (index 3) to the front (index 0)",
      "name": "it moves the ♦ (index 3) to the front (index 0)",
      "cmd": "rearrange([\"♠\", \"♣\", \"♥\", \"♦\", \"✨\"], 3, 0)",
      "expected": ["♦", "♠", "♣", "♥", "✨"]
    },
    {
      "test": "magic-moves > rearrange > rearrange([ ♠, ♣, ♥, ♦, ✨ ], 3, 0): it mutates the input",
      "name": "it mutates the input",
      "cmd": "rearrange([\"♠\", \"♣\", \"♥\", \"♦\", \"✨\"], 3, 0)",
      "expected": ["♦", "♠", "♣", "♥", "✨"]
    },
    {
      "test": "magic-moves > rearrange > rearrange([ ♠, ♣, ♥, ♦, ✨ ], -1, 0): moves the ✨ (size - 1) to the front (index 0)",
      "name": "moves the ✨ (size - 1) to the front (index 0)",
      "cmd": "rearrange([\"♠\", \"♣\", \"♥\", \"♦\", \"✨\"], -1, 0)",
      "expected": ["✨", "♠", "♣", "♥", "♦"]
    },
    {
      "test": "magic-moves > rearrange > rearrange([ ♠, ♣, ♥, ♦, ✨ ], 1, -2): moves the ♣ (index 1) just before the back (size - 2)",
      "name": "moves the ♣ (index 1) just before the back (size - 2)",
      "cmd": "rearrange([\"♠\", \"♣\", \"♥\", \"♦\", \"✨\"], 1, -2)",
      "expected": ["♠", "♥", "♦", "♣", "✨"]
    },
    {
      "test": "magic-moves > rearrange > rearrange([ ♠, ♣, ♥, ♦, ✨ ], -3, -4): moves the ♥ (size - 3) one to the left (size - 4)",
      "name": "moves the ♥ (size - 3) one to the left (size - 4)",
      "cmd": "rearrange([\"♠\", \"♣\", \"♥\", \"♦\", \"✨\"], -3, -4)",
      "expected": ["♠", "♥", "♣", "♦", "✨"]
    },
    {
      "test": "magic-moves > rearrange > rearrange([ ♠, ♣, ♥, ♦, ✨ ], 0, 0): keeps ♠ (index 0) in place",
      "name": " keeps ♠ (index 0) in place",
      "cmd": "rearrange([\"♠\", \"♣\", \"♥\", \"♦\", \"✨\"], 0, 0)",
      "expected": ["♠", "♣", "♥", "♦", "✨"]
    }
  ]
}
