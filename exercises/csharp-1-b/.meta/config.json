{
  "solution_files": ["Csharp1B.cs"],
  "test_file": "Csharp1BTest.cs",
  "tests": [
    {
      "test": "StoreTest.OnlyEmptyQueueIsQueue1",
      "name": "Only empty queue is queue 1",
      "cmd": "Store.QueueWithMinimalWaitingTime(customersInQueue1: 0, customersInQueue2: 1, customersInQueue3: 2)",
      "expected": "1"
    },
    {
      "test": "StoreTest.OnlyEmptyQueueIsQueue2",
      "name": "Only empty queue is queue 2",
      "cmd": "Store.QueueWithMinimalWaitingTime(customersInQueue1: 3, customersInQueue2: 0, customersInQueue3: 2)",
      "expected": "2"
    },
    {
      "test": "StoreTest.OnlyEmptyQueueIsQueue3",
      "name": "Only empty queue is queue 3",
      "cmd": "Store.QueueWithMinimalWaitingTime(customersInQueue1: 1, customersInQueue2: 1, customersInQueue3: 0)",
      "expected": "3"
    },
    {
      "test": "StoreTest.AllQueuesHaveSameNumberOfCustomersInQueue",
      "name": "All queues have same number of customers in queue",
      "cmd": "Store.QueueWithMinimalWaitingTime(customersInQueue1: 5, customersInQueue2: 5, customersInQueue3: 5)",
      "expected": "3"
    },
    {
      "test": "StoreTest.NonEmptyQueuesWithFastestQueueHasMinimalWaitingTime",
      "name": "Non empty queues with fastest queue has minimal waiting time",
      "cmd": "Store.QueueWithMinimalWaitingTime(customersInQueue1: 2, customersInQueue2: 5, customersInQueue3: 4)",
      "expected": "3"
    },
    {
      "test": "StoreTest.NonEmptyQueuesWithMiddleQueueHasMinimalWaitingTime",
      "name": "Non empty queues with middle queue has minimal waiting time",
      "cmd": "Store.QueueWithMinimalWaitingTime(customersInQueue1: 1, customersInQueue2: 2, customersInQueue3: 6)",
      "expected": "2"
    },
    {
      "test": "StoreTest.NonEmptyQueuesWithSlowestQueueHasMinimalWaitingTime",
      "name": "Non empty queues with slowest queue has minimal waiting time",
      "cmd": "Store.QueueWithMinimalWaitingTime(customersInQueue1: 2, customersInQueue2: 6, customersInQueue3: 11)",
      "expected": "1"
    }
  ]
}
