{
  "solution_files": [
    "src/lib.rs"
  ],
  "tests": [
    {
      "test": "test_example",
      "name": "Example",
      "cmd": "longest_incrementing_subslice(&[1, 2, 4, 4, 5, 6, 7, 3, 2, 7, 8, 9, 1])",
      "expected": "&[4, 5, 6, 7]"
    },
    {
      "test": "test_head",
      "name": "Head",
      "cmd": "longest_incrementing_subslice(&[1, 2, 3, 5])",
      "expected": "&[1, 2, 3]"
    },
    {
      "test": "test_tail",
      "name": "Tail",
      "cmd": "longest_incrementing_subslice(&[8, 1, 2, 3])",
      "expected": "&[1, 2, 3]"
    },
    {
      "test": "test_full",
      "name": "Full",
      "cmd": "longest_incrementing_subslice(&[1, 2, 3])",
      "expected": "&[1, 2, 3]"
    },
    {
      "test": "test_min",
      "name": "Minimum",
      "cmd": "longest_incrementing_subslice(&[2, 1, 0, 1, 2, 5, 6])",
      "expected": " &[0, 1, 2]"
    },
    {
      "test": "test_max",
      "name": "Maximum",
      "cmd": "longest_incrementing_subslice(&[2, 5, 2, 253, 254, 255, 1])",
      "expected": "&[253, 254, 255]"
    }
  ]
}
